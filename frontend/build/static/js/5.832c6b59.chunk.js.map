{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","places/pages/UpdatePlace.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","props","useReducer","valid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","touchHandler","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","UpdatePlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedPlace","setLoadedPlace","history","useHistory","placeId","useParams","title","description","inputHandler","setFormData","process","responseData","place","fetchPlace","placeUpdateSubmitHandler","preventDefault","JSON","stringify","userId","console","log","Fragment","onClear","onSubmit","initialValue","initialValid","disabled"],"mappings":"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","file":"static/js/5.832c6b59.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.value || '',\n    isTouched: false,\n    isValid: props.valid || false\n  });\n\n  const {id, onInput}= props;\n  const {value,isValid}=inputState;\n\n  useEffect(()=>{\n    onInput(id,value,isValid)\n  },[id,value,isValid,onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React, { useContext, useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport \"./UpdatePlace.css\";\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace,setLoadedPlace]= useState();\n  const history= useHistory();\n  const placeId = useParams().placeId;\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(()=>{\n    const fetchPlace= async ()=>{\n      try{\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/api/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true,\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true,\n            },\n          },\n          true\n        );\n      }catch(err){}\n    }\n    fetchPlace();\n  } ,[sendRequest, placeId])\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try{\n        await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/api/places/${placeId}`,\n          \"PATCH\",\n          JSON.stringify({\n            title: formState.inputs.title.value,\n            description: formState.inputs.description.value,\n          }),\n          {\n            \"Content-Type\": \"application/json\",\n          }\n        );\n      history.push('/'+ auth.userId + '/places')\n    }catch(err){}\n\n  };\n\n  \n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n  {console.log(loadedPlace.title);}\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n          initialValue={loadedPlace.title }\n          initialValid={true}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (min. 5 characters).\"\n          onInput={inputHandler}\n          initialValue={loadedPlace.description}\n          initialValid={true}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          UPDATE PLACE\n        </Button>\n      </form>}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;\n"],"sourceRoot":""}