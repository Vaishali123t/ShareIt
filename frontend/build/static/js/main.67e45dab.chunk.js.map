{"version":3,"sources":["shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Card.js","shared/context/auth-context.js","shared/components/UIElements/Backdrop.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Avatar.js","users/components/UserItem.js","users/components/UsersList.js","users/pages/Users.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["LoadingSpinner","props","className","asOverlay","Card","style","children","AuthContext","createContext","isLoggedIn","userId","login","logout","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","Button","href","size","inverse","danger","to","exact","type","disabled","ErrorModal","onCancel","onClear","header","show","error","footer","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequest","useRef","sendRequest","useCallback","url","method","body","headers","httpabortCtrl","AbortController","current","push","fetch","signal","response","responseData","json","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortctrl","abort","ClearError","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","Avatar","src","image","alt","width","height","UserItem","id","process","name","placeCount","UserList","items","length","map","user","key","places","Users","clearError","loadedUsers","setLoadedUsers","users","console","log","fetchUsers","MainHeader","NavLinks","auth","useContext","SideDrawer","CSSTransition","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","NewPlace","React","lazy","UserPlaces","UpdatePlace","Auth","App","routes","setIsLoggedIn","setUserId","uid","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.67e45dab.chunk.js","sourcesContent":["import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useState, useCallback, useEffect, useRef } from \"react\"\r\n\r\n\r\nexport const useHttpClient= ()=>{\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const activeHttpRequest= useRef([]);\r\n\r\n  const sendRequest=useCallback(async (url,method='GET',body=null, headers={})=>{\r\n\r\n    setIsLoading(true);\r\n    const httpabortCtrl= new AbortController();\r\n    activeHttpRequest.current.push(httpabortCtrl);\r\n\r\n    try{\r\n        const response=await fetch(url,{\r\n            method,\r\n            body,\r\n            headers,\r\n            signal:httpabortCtrl.signal\r\n        })\r\n        const responseData= response.json();\r\n\r\n        activeHttpRequest.current= activeHttpRequest.current.filter(reqCtrl => reqCtrl !== httpabortCtrl);\r\n        if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n\r\n    }catch(err){\r\n        setIsLoading(false);\r\n        setError(err.message);\r\n        throw err;\r\n    }\r\n  },[])\r\n\r\n  const ClearError=()=>{\r\n    setError(null);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    return ()=>{\r\n        activeHttpRequest.current.forEach(abortctrl => { abortctrl.abort()      \r\n        });\r\n    }\r\n  },[])\r\n\r\n  return { isLoading, error, sendRequest, ClearError };\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\r\n\r\nimport './Avatar.css';\r\n\r\nconst Avatar = props => {\r\n  return (\r\n    <div className={`avatar ${props.className}`} style={props.style}>\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        style={{ width: props.width, height: props.width }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport \"./UserItem.css\";\r\nimport Avatar from '../../shared/components/UIElements/Avatar'\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst UserItem = (props) => {\r\n    return (\r\n      <li className=\"user-item\">\r\n        <Card className=\"user-item__content\">\r\n          <Link to={`/${props.id}/places`}>\r\n            <div className=\"user-item__image\">\r\n              <Avatar\r\n                image={ process.env.REACT_APP_BACKEND_URL + \"/\" + props.image}\r\n                alt={props.name}\r\n              />\r\n            </div>\r\n            <div className=\"user-item__info\">\r\n              <h2>{props.name}</h2>\r\n              <h3>\r\n                {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n              </h3>\r\n            </div>\r\n          </Link>\r\n        </Card>\r\n      </li>\r\n    );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\nimport UserItem from \"./UserItem\";\r\nimport \"./UsersList.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\n\r\nconst UserList = (props) => {\r\n    if(props.items.length===0){\r\n        return (\r\n          <div className=\"center\">\r\n            <Card>\r\n              <h2>No users Found.</h2>\r\n            </Card>\r\n          </div>\r\n        );\r\n    }\r\n\r\n    return <ul className=\"users-list\">\r\n        {props.items.map(user =>(\r\n            <UserItem\r\n              key={user.id}\r\n              id={user.id}\r\n              image={user.image}\r\n              name={user.name}\r\n              placeCount={user.places.length}\r\n            />\r\n    ))}\r\n    </ul>\r\n};\r\n\r\nexport default UserList;\r\n","import React, {useEffect, useState} from 'react';\r\nimport UserList from '../components/UsersList';\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst Users=()=>{\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [loadedUsers, setLoadedUsers]=useState()\r\n\r\n    useEffect(()=>{\r\n        const fetchUsers=async ()=>{\r\n            try{\r\n                const responseData=await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/api/users`);\r\n                setLoadedUsers(responseData.users);\r\n                console.log(responseData.users);\r\n            }catch(err){}\r\n        }\r\n        fetchUsers();\r\n    },[sendRequest]);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && (\r\n          <div className=\"center\">\r\n            <LoadingSpinner />\r\n          </div>\r\n        )}\r\n        {!isLoading && loadedUsers && <UserList items={loadedUsers} />}\r\n      </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Users;","import React from 'react'\r\nimport './MainHeader.css'\r\n\r\nconst MainHeader=props=>{\r\n    return(\r\n        <header className='main-header'>\r\n            {props.children}\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default MainHeader;","import React,{useContext} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nimport \"./NavLinks.css\";\r\n\r\nconst NavLinks = () => {\r\n\r\n  const auth=useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          {\" \"}\r\n          All Users{\" \"}\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>My Places</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">Authenticate</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">Add Place</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>Logout</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDOM  from \"react-dom\";\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nimport './SideDrawer.css';\r\n\r\n\r\nconst SideDrawer=(props)=>{\r\n\r\n    const content = (\r\n      <CSSTransition in={props.show} timeout={200} classNames=\"slide-in-left\" mountOnEnter unmountOnExit>\r\n        <aside className=\"side-drawer\" onClick={props.onClick}> {props.children}</aside>\r\n      </CSSTransition>\r\n    );\r\n   \r\n    return ReactDOM.createPortal(content,document.getElementById('drawer-hook'));\r\n};\r\n\r\nexport default SideDrawer;","import React, {useState} from \"react\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\nimport \"./MainNavigation.css\";\r\n\r\nconst MainNavigation = (props) => {\r\n\r\n  const [drawerIsOpen,setDrawerIsOpen]=useState(false)\r\n\r\n  const openDrawerHandler=()=>{\r\n      setDrawerIsOpen(true);\r\n  }\r\n\r\n    const closeDrawerHandler = () => {\r\n      setDrawerIsOpen(false);\r\n    };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n      {drawerIsOpen && (\r\n        <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n          <nav className=\"main-navigation__drawer-nav\">\r\n            <NavLinks />\r\n          </nav>\r\n        </SideDrawer>\r\n      )}\r\n      <MainHeader>\r\n        <button\r\n          className=\"main-navigation__menu-btn\"\r\n          onClick={openDrawerHandler}\r\n        >\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">YourPlaces</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, {Suspense, useCallback, useState} from 'react';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom'\nimport Users from './users/pages/Users'\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\n// import NewPlace from './places/pages/NewPlace';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './users/pages/Auth';\nimport {AuthContext} from './shared/context/auth-context';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst NewPlace=React.lazy(()=> import('./places/pages/NewPlace'))\nconst UserPlaces= React.lazy(()=> import('./places/pages/UserPlaces'))\nconst UpdatePlace=React.lazy(()=>import('./places/pages/UpdatePlace'))\nconst Auth= React.lazy(()=> import('./users/pages/Auth'))\n\nfunction App() {\n\nconst [isLoggedIn,setIsLoggedIn]=useState(false)\nconst [userId, setUserId]= useState(null)\n\nconst login=useCallback((uid)=>{\n  setIsLoggedIn(true)\n  setUserId(uid);\n},[])\n\nconst logout=useCallback(()=>{\n  setIsLoggedIn(false)\n  setUserId(null);\n},[])\n\n\nlet routes;\n\nif(isLoggedIn){\n  routes = (\n    <Switch>\n      <Route path=\"/\" exact>\n        <Users />\n      </Route>\n      <Route path=\"/places/new\" exact>\n        <NewPlace />\n      </Route>\n      <Route path=\"/:userId/places\" exact>\n        <UserPlaces />\n      </Route>\n      <Route path=\"/places/:placeId\" exact>\n        <UpdatePlace />\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n}\nelse{\n  routes = (\n    <Switch>\n      <Route path=\"/\" exact>\n        <Users />\n      </Route>\n      <Route path=\"/:userId/places\" exact>\n        <UserPlaces />\n      </Route>\n      <Route path=\"/auth\" exact>\n        <Auth />\n      </Route>\n      <Redirect to=\"/auth\" />\n    </Switch>\n  );\n}\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: isLoggedIn,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}